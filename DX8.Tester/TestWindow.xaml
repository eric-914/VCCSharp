<Window x:Class="DX8.Tester.TestWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:tester="clr-namespace:DX8.Tester"
        xmlns:converters="clr-namespace:DX8.Tester.Converters"
        mc:Ignorable="d"
        Title="DirectX 8 Tester" Height="250" Width="800">
    <Window.DataContext>
        <tester:TestWindowViewModel/>
    </Window.DataContext>
    <Window.Resources>
        <converters:ListToCountConverter x:Key="ListToCountConverter"/>

        <Color x:Key="GlyphColor">#FF444444</Color>

        <Style TargetType="{x:Type CheckBox}">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <BulletDecorator Background="Transparent">
                            <BulletDecorator.Bullet>
                                <Border x:Name="Border" Margin="0,6,0,0" Width="13" Height="13" CornerRadius="0" BorderThickness="1" BorderBrush="Black" Background="Transparent">
                                    <Grid>
                                        <Path Visibility="Collapsed" Width="7" Height="7" x:Name="CheckMark" SnapsToDevicePixels="False" StrokeThickness="2" Data="M 0 0 L 7 7 M 0 7 L 7 0">
                                            <Path.Stroke>
                                                <SolidColorBrush Color="{DynamicResource GlyphColor}" />
                                            </Path.Stroke>
                                        </Path>
                                    </Grid>
                                </Border>
                            </BulletDecorator.Bullet>

                            <VisualStateManager.VisualStateGroups>

                                <VisualStateGroup x:Name="CheckStates">

                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="CheckMark">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>

                                    <VisualState x:Name="Unchecked" />

                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>

                            <ContentPresenter Margin="4,0,20,0" VerticalAlignment="Center" HorizontalAlignment="Left" RecognizesAccessKey="True" />
                        </BulletDecorator>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <StackPanel>
        <StackPanel Orientation="Horizontal">
            <Label>Joysticks:</Label>
            <Label Content="{Binding Joysticks, Converter={StaticResource ListToCountConverter}}"/>
        </StackPanel>
        <ListBox ItemsSource="{Binding Joysticks}"/>
        <StackPanel Orientation="Horizontal">
            <Label>Stick:</Label>
            <Label>Horizontal:</Label>
            <Label Content="{Binding Joystick.Horizontal}"/>
            <Label>Vertical:</Label>
            <Label Content="{Binding Joystick.Vertical}"/>
        </StackPanel>
        <StackPanel Orientation="Horizontal">
            <Label>Buttons:</Label>
            <CheckBox IsChecked="{Binding Joystick.X, Mode=OneWay}">X</CheckBox>
            <CheckBox IsChecked="{Binding Joystick.Y, Mode=OneWay}">Y</CheckBox>
            <CheckBox IsChecked="{Binding Joystick.A, Mode=OneWay}">A</CheckBox>
            <CheckBox IsChecked="{Binding Joystick.B, Mode=OneWay}">B</CheckBox>
            <CheckBox IsChecked="{Binding Joystick.LB, Mode=OneWay}">LB</CheckBox>
            <CheckBox IsChecked="{Binding Joystick.RB, Mode=OneWay}">RB</CheckBox>
            <CheckBox IsChecked="{Binding Joystick.Back, Mode=OneWay}">Back</CheckBox>
            <CheckBox IsChecked="{Binding Joystick.Start, Mode=OneWay}">Start</CheckBox>
        </StackPanel>
    </StackPanel>
</Window>
